import type { Metadata } from 'next';
import './globals.css';
import { Header } from '@/components/layout/header';
import { Footer } from '@/components/layout/footer';
import { Toaster } from '@/components/ui/toaster';
import { cn } from '@/lib/utils';
import { FirebaseClientProvider } from '@/firebase';

export const metadata: Metadata = {
  title: 'Medi Meet',
  description: 'Your health, simplified. Book appointments, get health tips, and manage your medical records with ease.',
  keywords: ['doctor appointment', 'healthcare', 'telemedicine', 'health tips', 'online booking'],
  manifest: '/manifest.json',
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" className="scroll-smooth">
      <head>
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" crossOrigin="anonymous" />
        <link href="https://fonts.googleapis.com/css2?family=PT+Sans:ital,wght@0,400;0,700;1,400;1,700&display=swap" rel="stylesheet" />
        <link rel="apple-touch-icon" href="/icons/icon-192x192.png"></link>
      </head>
      <body className={cn('font-body antialiased')}>
        <FirebaseClientProvider>
          <div className="flex min-h-screen flex-col">
            <Header />
            <main className="flex-1">{children}</main>
            <Footer />
          </div>
          <Toaster />
        </FirebaseClientProvider>
      </body>
    </html>
  );
}
'use client';
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';
import { Badge } from '@/components/ui/badge';
import type { Appointment } from '@/lib/types';
import { PlaceHolderImages } from '@/lib/placeholder-images';
import Image from 'next/image';
import Link from 'next/link';
import {
  ArrowRight,
  HeartPulse,
  Stethoscope,
  Brain,
  Bone,
} from 'lucide-react';
import { ToothIcon } from '@/components/icons/tooth-icon';
import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from '@/components/ui/accordion';
import { Sheet, SheetTrigger } from '@/components/ui/sheet';
import dynamic from 'next/dynamic';

const AppointmentSheet = dynamic(() => import('@/components/services/appointment-sheet'), { ssr: false });


const appointments: Appointment[] = [
  {
    doctor: 'Dr. Sriram',
    specialty: 'Cardiologist',
    date: '2025-10-15',
    time: '10:30 AM',
    status: 'Completed',
  },
  {
    doctor: 'Dr. Sucharitha',
    specialty: 'Dentist',
    date: '2025-10-15',
    time: '02:00 PM',
    status: 'Completed',
  },
  {
    doctor: 'Dr. Nikitha',
    specialty: 'Neurologist',
    date: '2025-10-15',
    time: '11:00 AM',
    status: 'Completed',
  },
];

const specialists = [
  {
    name: 'Cardiology',
    icon: <HeartPulse className="size-8 text-primary" />,
    doctor: 'Dr. Sriram',
    achievements: 'Pioneered new minimally invasive heart valve replacement surgery, significantly reducing patient recovery time.'
  },
  {
    name: 'Dentistry',
    icon: <ToothIcon className="size-8 text-primary" />,
    doctor: 'Dr. Sucharitha',
    achievements: 'Awarded for excellence in cosmetic dentistry and advanced research in periodontal disease treatment.'
  },
  {
    name: 'Neurology',
    icon: <Brain className="size-8 text-primary" />,
    doctor: 'Dr. Nikitha',
    achievements: 'Published groundbreaking research on early-onset Alzheimer\'s and developed innovative new therapies.'
  },
  {
    name: 'Orthopedics',
    icon: <Bone className="size-8 text-primary" />,
    doctor: 'Dr. Anand',
    achievements: 'Expert in joint replacement surgeries and sports medicine, helping athletes return to peak performance.'
  },
  {
    name: 'General',
    icon: <Stethoscope className="size-8 text-primary" />,
    doctor: 'Dr. Priya',
    achievements: 'Recognized for comprehensive patient care and dedication to community health and wellness programs.'
  },
];

export default function Home() {
  const heroImage = PlaceHolderImages.find((img) => img.id === 'hero-hospital');

  return (
    <div className="flex flex-col">
      <section className="relative w-full bg-primary/10 py-20 md:py-32">
        <div className="container relative mx-auto grid grid-cols-1 gap-8 px-4 text-center md:grid-cols-2 md:text-left">
          <div className="space-y-6 rounded-lg bg-background/80 p-6 backdrop-blur-sm md:bg-transparent md:p-0 md:backdrop-blur-none">
            <h1 className="font-headline text-4xl font-bold tracking-tight text-black md:text-5xl lg:text-6xl">
              Your Health, Simplified.
            </h1>
            <p className="text-lg text-muted-foreground md:text-xl">
              Book appointments, get AI-powered health tips, and manage your
              medical journey with Medi Meet.
            </p>
            <div className="flex flex-col justify-center gap-4 sm:flex-row md:justify-start">
              <Sheet>
                <SheetTrigger asChild>
                  <Button size="lg" className="font-bold">Book an Appointment</Button>
                </SheetTrigger>
                <AppointmentSheet />
              </Sheet>
              <Button asChild size="lg" variant="secondary" className="font-bold">
                <Link href="/about">Meet Our Team</Link>
              </Button>
            </div>
          </div>
        </div>
      </section>

      <section className="w-full bg-background py-16 md:py-24">
        <div className="container mx-auto px-4">
          <div className="mb-12 text-center">
            <h2 className="font-headline text-3xl font-bold tracking-tight">
              Our Services
            </h2>
            <p className="mt-2 text-lg text-muted-foreground">
              Comprehensive care at your fingertips.
            </p>
          </div>
          <div className="grid grid-cols-1 gap-8 md:grid-cols-2 lg:grid-cols-4">
            <Card className="transform transition-transform duration-300 hover:-translate-y-2 hover:shadow-xl">
              <CardHeader>
                <Stethoscope className="mb-4 size-10 text-primary" />
                <CardTitle>Online Booking</CardTitle>
              </CardHeader>
              <CardContent>
                <p className="text-muted-foreground">
                  Easily schedule appointments with top doctors.
                </p>
              </CardContent>
            </Card>
            <Card className="transform transition-transform duration-300 hover:-translate-y-2 hover:shadow-xl">
              <CardHeader>
                <HeartPulse className="mb-4 size-10 text-primary" />
                <CardTitle>Specialist Search</CardTitle>
              </CardHeader>
              <CardContent>
                <p className="text-muted-foreground">
                  Find the right specialist for your specific needs.
                </p>
              </CardContent>
            </Card>
            <Card className="transform transition-transform duration-300 hover:-translate-y-2 hover:shadow-xl">
              <CardHeader>
                <Image
                  src="https://www.gstatic.com/mobilesdk/160503_mobilesdk/logo/2x/firebase_28dp.png"
                  width={40}
                  height={40}
                  alt="AI Icon"
                  className="mb-4"
                />
                <CardTitle>AI Health Tips</CardTitle>
              </CardHeader>
              <CardContent>
                <p className="text-muted-foreground">
                  Get personalized wellness advice from our AI.
                </p>
              </CardContent>
            </Card>
            <Card className="transform transition-transform duration-300 hover:-translate-y-2 hover:shadow-xl">
              <CardHeader>
                <Stethoscope className="mb-4 size-10 text-primary" />
                <CardTitle>Appointment History</CardTitle>
              </CardHeader>
              <CardContent>
                <p className="text-muted-foreground">
                  Keep track of all your past and upcoming visits.
                </p>
              </CardContent>
            </Card>
          </div>
        </div>
      </section>

      <section className="w-full bg-primary/5 py-16 md:py-24">
        <div className="container mx-auto px-4">
          <div className="mb-12 text-center">
            <h2 className="font-headline text-3xl font-bold tracking-tight">
              Find a Specialist
            </h2>
            <p className="mt-2 text-lg text-muted-foreground">
              Access a network of trusted medical experts.
            </p>
          </div>
          <Accordion type="single" collapsible className="w-full grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {specialists.map((specialist) => (
               <AccordionItem value={specialist.name} key={specialist.name} className="border-none">
                 <Card className="flex flex-col text-center transition-all duration-300 hover:shadow-lg">
                   <div className="flex flex-col items-center justify-center p-6">
                     {specialist.icon}
                     <p className="mt-4 font-semibold">{specialist.name}</p>
                   </div>
                   <AccordionTrigger className="px-6 py-3 text-sm text-primary hover:no-underline hover:bg-accent/50 [&[data-state=open]]:bg-accent/50">
                      Meet {specialist.doctor}
                   </AccordionTrigger>
                   <AccordionContent className="p-6 text-left bg-accent/20">
                     <p className="font-semibold text-foreground">{specialist.doctor}</p>
                     <p className="text-sm text-muted-foreground mt-2">{specialist.achievements}</p>
                   </AccordionContent>
                 </Card>
               </AccordionItem>
            ))}
          </Accordion>
        </div>
      </section>
      
      <section id="history" className="w-full bg-background py-16 md:py-24">
        <div className="container mx-auto px-4">
          <Card className="mx-auto max-w-4xl">
            <CardHeader>
              <CardTitle className="font-headline text-3xl">
                Appointment History
              </CardTitle>
              <CardDescription>
                A record of your previous consultations.
              </CardDescription>
            </CardHeader>
            <CardContent>
              <ul className="space-y-4">
                {appointments.map((appt, index) => (
                  <li
                    key={index}
                    className="flex flex-wrap items-center justify-between gap-4 rounded-lg border p-4 transition-colors hover:bg-muted"
                  >
                    <div className="flex items-center gap-4">
                      <Avatar>
                        <AvatarFallback>
                          {appt.doctor
                            .split(' ')
                            .map((n) => n[0])
                            .join('')}
                        </AvatarFallback>
                      </Avatar>
                      <div>
                        <p className="font-semibold">{appt.doctor}</p>
                        <p className="text-sm text-muted-foreground">
                          {appt.specialty}
                        </p>
                      </div>
                    </div>
                    <div className="text-right">
                      <p className="text-sm font-medium">
                        {new Date(appt.date).toLocaleDateString('en-US', {
                          year: 'numeric',
                          month: 'long',
                          day: 'numeric',
                        })}
                      </p>
                      <Badge
                        variant={
                          appt.status === 'Completed' ? 'secondary' : 'default'
                        }
                        className="mt-1"
                      >
                        {appt.status}
                      </Badge>
                    </div>
                  </li>
                ))}
              </ul>
            </CardContent>
          </Card>
        </div>
      </section>
    </div>
  );
}
'use client';

import Link from 'next/link';
import { usePathname } from 'next/navigation';
import { Button } from '@/components/ui/button';
import { Sheet, SheetContent, SheetTrigger } from '@/components/ui/sheet';
import { Menu, LogOut } from 'lucide-react';
import { cn } from '@/lib/utils';
import type { NavLink } from '@/lib/types';
import { Logo } from '../icons/logo';
import { useAuth, useUser } from '@/firebase';
import { signOut } from 'firebase/auth';
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuLabel,
  DropdownMenuSeparator,
  DropdownMenuTrigger,
} from "@/components/ui/dropdown-menu"
import { Avatar, AvatarFallback } from '../ui/avatar';


const navLinks: NavLink[] = [
  { href: '/', label: 'Home' },
  { href: '/about', label: 'About' },
  { href: '/services', label: 'Services' },
  { href: '/notifications', label: 'Notifications' },
  { href: '/contact', label: 'Contact Us' },
];

export function Header() {
  const pathname = usePathname();
  const { user, isUserLoading } = useUser();
  const auth = useAuth();

  const handleLogout = async () => {
    await signOut(auth);
  };

  const getInitials = (email: string | null | undefined) => {
    if (!email) return '';
    return email.substring(0, 2).toUpperCase();
  }

  return (
    <header className="sticky top-0 z-50 w-full border-b bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60">
      <div className="container flex h-16 items-center">
        <div className="mr-4 hidden md:flex">
          <Link href="/" className="mr-6 flex items-center space-x-2">
            <Logo className="h-8 w-auto" />
          </Link>
          <nav className="flex items-center space-x-6 text-sm font-medium">
            {navLinks.map((link) => (
              <Link
                key={link.href}
                href={link.href}
                className={cn(
                  'transition-colors hover:text-primary',
                  pathname === link.href ? 'text-primary' : 'text-muted-foreground'
                )}
              >
                {link.label}
              </Link>
            ))}
          </nav>
        </div>

        <div className="flex flex-1 items-center justify-between md:hidden">
          <Link href="/" className="flex items-center">
             <Logo className="h-7 w-auto" />
          </Link>

          <Sheet>
            <SheetTrigger asChild>
              <Button variant="ghost" size="icon">
                <Menu className="size-6" />
                <span className="sr-only">Open Menu</span>
              </Button>
            </SheetTrigger>
            <SheetContent side="left">
              <div className="p-4">
                <Link href="/" className="mb-8 flex items-center">
                  <Logo className="h-8 w-auto" />
                </Link>
                <nav className="flex flex-col space-y-4">
                  {navLinks.map((link) => (
                    <Link
                      key={link.href}
                      href={link.href}
                      className={cn(
                        'text-lg font-medium transition-colors hover:text-primary',
                        pathname === link.href ? 'text-primary' : 'text-muted-foreground'
                      )}
                    >
                      {link.label}
                    </Link>
                  ))}
                </nav>
              </div>
            </SheetContent>
          </Sheet>
        </div>

        <div className="flex flex-1 items-center justify-end space-x-4">
          {isUserLoading ? (
             <div className="h-10 w-20 animate-pulse rounded-md bg-muted" />
          ) : user ? (
            <DropdownMenu>
              <DropdownMenuTrigger asChild>
                <Button variant="ghost" className="relative h-8 w-8 rounded-full">
                  <Avatar className="h-8 w-8">
                    <AvatarFallback>{getInitials(user.email)}</AvatarFallback>
                  </Avatar>
                </Button>
              </DropdownMenuTrigger>
              <DropdownMenuContent className="w-56" align="end" forceMount>
                <DropdownMenuLabel className="font-normal">
                  <div className="flex flex-col space-y-1">
                    <p className="text-sm font-medium leading-none">My Account</p>
                    <p className="text-xs leading-none text-muted-foreground">
                      {user.email}
                    </p>
                  </div>
                </DropdownMenuLabel>
                <DropdownMenuSeparator />
                <DropdownMenuItem onClick={handleLogout}>
                  <LogOut className="mr-2 h-4 w-4" />
                  <span>Log out</span>
                </DropdownMenuItem>
              </DropdownMenuContent>
            </DropdownMenu>
          ) : (
            <Button asChild>
              <Link href="/login">Login</Link>
            </Button>
          )}
        </div>
      </div>
    </header>
  );
}
'use client';

import { useEffect, useState } from 'react';
import {
  SheetContent,
  SheetHeader,
  SheetTitle,
  SheetDescription,
  SheetFooter,
} from '@/components/ui/sheet';
import { Button } from '@/components/ui/button';
import { Label } from '@/components/ui/label';
import { Input } from '@/components/ui/input';
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from '@/components/ui/select';
import { Calendar } from '@/components/ui/calendar';
import { useToast } from '@/hooks/use-toast';
import { CalendarIcon, CheckCircle, LogIn } from 'lucide-react';
import { Popover, PopoverContent, PopoverTrigger } from '../ui/popover';
import { cn } from '@/lib/utils';
import { format } from 'date-fns';
import { useUser } from '@/firebase';
import Link from 'next/link';

const specialists = [
  'Cardiologist',
  'Dentist',
  'Neurologist',
  'Orthopedist',
  'General',
];

const timeSlots = [
  '09:00 AM',
  '10:00 AM',
  '11:00 AM',
  '01:00 PM',
  '02:00 PM',
  '03:00 PM',
];

export default function AppointmentSheet() {
  const { user, isUserLoading } = useUser();
  const [selectedSpecialist, setSelectedSpecialist] = useState('');
  const [selectedDate, setSelectedDate] = useState<Date | undefined>();
  const [selectedTime, setSelectedTime] = useState('');
  const [name, setName] = useState('');
  const [email, setEmail] = useState('');
  const [submitted, setSubmitted] = useState(false);
  const { toast } = useToast();

  useEffect(() => {
    if (user) {
      setName(user.displayName || '');
      setEmail(user.email || '');
    }
  }, [user]);

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    if (!selectedSpecialist || !selectedDate || !selectedTime || !name || !email) {
      toast({
        variant: 'destructive',
        title: 'Missing Information',
        description: 'Please fill out all fields to book your appointment.',
      });
      return;
    }
    // Handle submission logic here
    console.log({
      specialist: selectedSpecialist,
      date: selectedDate,
      time: selectedTime,
      name,
      email,
    });
    setSubmitted(true);
  };
  
  if (isUserLoading) {
    return (
        <SheetContent>
            <SheetHeader>
                <SheetTitle>Loading...</SheetTitle>
                <SheetDescription>
                    Checking your authentication status.
                </SheetDescription>
            </SheetHeader>
        </SheetContent>
    )
  }

  if (!user) {
    return (
        <SheetContent className="flex flex-col items-center justify-center text-center">
            <LogIn className="size-20 text-primary" />
            <SheetHeader>
                <SheetTitle className="font-headline text-3xl">Login Required</SheetTitle>
                <SheetDescription className="text-lg">
                    Please log in to book an appointment.
                </SheetDescription>
            </SheetHeader>
            <Button asChild size="lg" className="mt-6">
                <Link href="/login">Login</Link>
            </Button>
        </SheetContent>
    )
  }

  if (submitted) {
    return (
        <SheetContent className="flex flex-col items-center justify-center text-center">
            <CheckCircle className="size-20 text-green-500" />
            <SheetHeader>
                <SheetTitle className="font-headline text-3xl">Appointment Booked!</SheetTitle>
                <SheetDescription className="text-lg">
                    Your appointment has been successfully scheduled. You will receive a confirmation email shortly.
                </SheetDescription>
            </SheetHeader>
            <p className="mt-4 text-muted-foreground">
                <strong>Specialist:</strong> {selectedSpecialist} <br />
                <strong>Date:</strong> {selectedDate && format(selectedDate, 'PPP')} <br />
                <strong>Time:</strong> {selectedTime}
            </p>
        </SheetContent>
    )
  }

  return (
    <SheetContent className="flex flex-col">
      <SheetHeader>
        <SheetTitle>Book an Appointment</SheetTitle>
        <SheetDescription>
          Fill in the details below to schedule your visit.
        </SheetDescription>
      </SheetHeader>
      <form onSubmit={handleSubmit} className="flex-1 space-y-6 overflow-y-auto p-1 pr-6">
        <div className="space-y-2">
          <Label htmlFor="specialist">Specialist</Label>
          <Select value={selectedSpecialist} onValueChange={setSelectedSpecialist}>
            <SelectTrigger id="specialist">
              <SelectValue placeholder="Select a specialist" />
            </SelectTrigger>
            <SelectContent>
              {specialists.map((s) => (
                <SelectItem key={s} value={s}>
                  {s}
                </SelectItem>
              ))}
            </SelectContent>
          </Select>
        </div>
        <div className="space-y-2">
          <Label htmlFor="date">Appointment Date</Label>
           <Popover>
              <PopoverTrigger asChild>
                <Button
                  variant={"outline"}
                  className={cn(
                    "w-full justify-start text-left font-normal",
                    !selectedDate && "text-muted-foreground"
                  )}
                >
                  <CalendarIcon className="mr-2 h-4 w-4" />
                  {selectedDate ? format(selectedDate, "PPP") : <span>Pick a date</span>}
                </Button>
              </PopoverTrigger>
              <PopoverContent className="w-auto p-0">
                <Calendar
                  mode="single"
                  selected={selectedDate}
                  onSelect={setSelectedDate}
                  initialFocus
                />
              </PopoverContent>
            </Popover>
        </div>
        <div className="space-y-2">
          <Label>Available Time Slots</Label>
          <div className="grid grid-cols-3 gap-2">
            {timeSlots.map((time) => (
              <Button
                key={time}
                type="button"
                variant={selectedTime === time ? 'default' : 'outline'}
                onClick={() => setSelectedTime(time)}
              >
                {time}
              </Button>
            ))}
          </div>
        </div>
        <div className="space-y-2">
          <Label htmlFor="name">Full Name</Label>
          <Input id="name" value={name} onChange={(e) => setName(e.target.value)} placeholder="John Doe" />
        </div>
        <div className="space-y-2">
          <Label htmlFor="email">Email Address</Label>
          <Input id="email" type="email" value={email} onChange={(e) => setEmail(e.target.value)} placeholder="john.doe@example.com" disabled />
        </div>
      </form>
      <SheetFooter className='pt-6'>
        <Button type="submit" onClick={handleSubmit} className="w-full">
          Confirm Appointment
        </Button>
      </SheetFooter>
    </SheetContent>
  );
}
{
  "name": "nextn",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev --turbopack -p 9002",
    "genkit:dev": "genkit start -- tsx src/ai/dev.ts",
    "genkit:watch": "genkit start -- tsx --watch src/ai/dev.ts",
    "build": "NODE_ENV=production next build",
    "start": "next start",
    "lint": "next lint",
    "typecheck": "tsc --noEmit"
  },
  "dependencies": {
    "@ducanh2912/next-pwa": "^10.2.7",
    "@genkit-ai/google-genai": "^1.20.0",
    "@genkit-ai/next": "^1.20.0",
    "@hookform/resolvers": "^4.1.3",
    "@radix-ui/react-accordion": "^1.2.3",
    "@radix-ui/react-alert-dialog": "^1.1.6",
    "@radix-ui/react-avatar": "^1.1.3",
    "@radix-ui/react-checkbox": "^1.1.4",
    "@radix-ui/react-collapsible": "^1.1.11",
    "@radix-ui/react-dialog": "^1.1.6",
    "@radix-ui/react-dropdown-menu": "^2.1.6",
    "@radix-ui/react-label": "^2.1.2",
    "@radix-ui/react-menubar": "^1.1.6",
    "@radix-ui/react-popover": "^1.1.6",
    "@radix-ui/react-progress": "^1.1.2",
    "@radix-ui/react-radio-group": "^1.2.3",
    "@radix-ui/react-scroll-area": "^1.2.3",
    "@radix-ui/react-select": "^2.1.6",
    "@radix-ui/react-separator": "^1.1.2",
    "@radix-ui/react-slider": "^1.2.3",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-switch": "^1.1.3",
    "@radix-ui/react-tabs": "^1.1.3",
    "@radix-ui/react-toast": "^1.2.6",
    "@radix-ui/react-tooltip": "^1.1.8",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "date-fns": "^3.6.0",
    "dotenv": "^16.5.0",
    "embla-carousel-react": "^8.6.0",
    "firebase": "^11.9.1",
    "genkit": "^1.20.0",
    "lucide-react": "^0.475.0",
    "next": "15.3.3",
    "patch-package": "^8.0.0",
    "react": "^18.3.1",
    "react-day-picker": "^8.10.1",
    "react-dom": "^18.3.1",
    "react-hook-form": "^7.54.2",
    "recharts": "^2.15.1",
    "tailwind-merge": "^3.0.1",
    "tailwindcss-animate": "^1.0.7",
    "zod": "^3.24.2"
  },
  "devDependencies": {
    "@types/node": "^20",
    "@types/react": "^18",
    "@types/react-dom": "^18",
    "genkit-cli": "^1.20.0",
    "postcss": "^8",
    "tailwindcss": "^3.4.1",
    "typescript": "^5"
  }
}
